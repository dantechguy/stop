SCRATCH TO PYTHON CONVERTER


How to implement:
- the stage will be a tkinter canvas
- each sprite will be a separate class
- each class will have its own file
- the stage is the main.py file
- the stage contains all global variables


Specific block problems:
  LOOK
- say and think: separate class
- colour effect: use numpy answer https://stackoverflow.com/questions/7274221/changing-image-hue-with-python-pil
- fisheye effect: - - - - - - - - - - - - - - - - - - - - - - - - 
- whirl effect: - - - - - - - - - - - - - - - - - - - - - - - - - 
- pixelate effect: PIL subsample down then zoom up
- mosaic effect: duplicate image
- brightness effect: PIL image enhance
- ghost effect: PIL putalpha
- go to front layer: figure out how layers work in scratch and tkinter
  SOUND
- playsound until done: figure out how to not stop other scripts running
- change pitch: process sound file
  EVENTS
- when loudness: pyaudio
- when i recieve: - - - - - - - - - - - - - - - - - - - - - - - - 
- broadcast:  - - - - - - - - - - - - - - - - - - - - - - - - - - 
  CONTROL
- stop: figure out how to stop specific scripts
- when i start as clone:  - - - - - - - - - - - - - - - - - - - - 
- create clone of:  - - - - - - - - - - - - - - - - - - - - - - -
- delete this clone:  - - - - - - - - - - - - - - - - - - - - - -
  SENSING
- when touching: use bbox overlap or look into polygon overlap
- when touching colour: - - - - - - - - - - - - - - - - - - - - -
- colour is touching colour:  - - - - - - - - - - - - - - - - - -
- ask: display say bubble and add extra entry box
- timer: create global var thats reset on start
  BLOCKS
- custom blocks:  - - - - - - - - - - - - - - - - - - - - - - - -


Variable data types:
- create new variable class
- allows for fluid change of type
- allows for incorrect use (adding a string)


Error handling:
- some blocks cannot be used
- the script should delete unsupported blocks and let the user know


How to convert:
- find a sprite
- find a top level block
- find its child block


FLUID VARIABLE:
  INT
- int to string when concatenating
  STRING
- 0 when math with numbers
- always greater than number
- convert to ord when compare against strings